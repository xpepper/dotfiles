alias ldots='ls -a | egrep "^\.[^\.]"'
alias ll='exa -l'
alias l='exa -l'
alias UP='source ~/.zshrc'
alias hosts='sudo vim /etc/hosts'
alias hidden='ls -a | grep "^\."'
alias uuid="uuidgen | tr '[:upper:]' '[:lower:]' | tr -d '\n' | tee >(pbcopy)"

# Vagrant
alias v='vagrant'

# K8S
kk() {
  KUBECONFIG=~/Documents/Dropbox/Casavo/dev-stuff/kubeconfig_pdibello_production.yaml kubectl "$@"
}


# Maven
alias mct='mvn -T 4 clean test'
alias mw='./mvnw'

# Gradle
alias gw='./gradlew'
gww() {
  ./gradlew "$@"
  if [[ $? -eq 0 ]]; then 
    say -v Luca "ho finito"
  else
    say -v Whisper "failed?"
  fi
}

makesound() {
  make "$@"
  if [[ $? -eq 0 ]]; then 
    say -v Luca "ho finito"
  else
    say -v Whisper "failed?"
  fi
}

# CLI tools (https://remysharp.com/2018/08/23/cli-improved)
alias cat='bat'
alias ping='prettyping'
alias more='most'

# AWS 
function setup_aws_credentials() {
    profile_name=$1
    role_arn=`/usr/bin/grep -A4 "$profile_name\]" ~/.aws/credentials|/usr/bin/grep role_arn|sed 's/^.*arn:/arn:/g'`

    if [[ -z "$role_arn" ]]
    then
        role_arn=`/usr/bin/grep -A4 "$profile_name\]" ~/.aws/config|/usr/bin/grep role_arn|sed 's/^.*arn:/arn:/g'`
    fi

    local stscredentials
    stscredentials=$(aws sts assume-role \
        --profile $profile_name \
        --role-arn "${role_arn}" \
        --role-session-name something \
        --query '[Credentials.SessionToken,Credentials.AccessKeyId,Credentials.SecretAccessKey]' \
        --output text)

    AWS_ACCESS_KEY_ID=$(echo "${stscredentials}" | awk '{print $2}')
    AWS_SECRET_ACCESS_KEY=$(echo "${stscredentials}" | awk '{print $3}')
    AWS_SESSION_TOKEN=$(echo "${stscredentials}" | awk '{print $1}')
    AWS_SECURITY_TOKEN=$(echo "${stscredentials}" | awk '{print $1}')

    region=$(/usr/bin/grep -A4 "\[$profile_name\]" ~/.aws/credentials|/usr/bin/grep region|sed s/'.*=[ ]'//g)
    if [ $region ]
    then
        AWS_DEFAULT_REGION=$region
        export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_SECURITY_TOKEN AWS_DEFAULT_REGION
    else
        export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_SECURITY_TOKEN
    fi

    echo "Default AWS region set to '$region'"
    echo "AWS env variables set:"
    printenv | grep AWS | sed 's;=.*;;' | sort
}
